{"version":3,"sources":["reducers/search.js","reducers/result.js","reducers/index.js","components/GridImage.js","containers/GridImage.js","actions/fetch.js","components/SearchBar.js","containers/SearchBar.js","actions/index.js","components/Header.js","components/MainPage.js","components/Image.js","components/App.js","registerServiceWorker.js","index.js"],"names":["search","state","arguments","length","undefined","storage","JSON","parse","localStorage","getItem","city","limit","initialState","action","type","result","combineReducers","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","GridImage","react_default","a","createElement","className","GridList","cellHeight","cols","style","gridListStyle","this","props","map","tile","GridListTile","key","id","src","url","alt","title","GridListTileBar","subtitle","tags","tag","idx","actionIcon","IconButton","component","Link","to","concat","server","farm","secret","Info_default","Component","withStyles","connect","fetchSearchImages","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","images","wrap","_context","prev","next","axios","get","sent","status","data","photos","photo","img","getUrl","owner","split","abrupt","stop","_x","_x2","apply","SearchBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLimitChange","event","setState","Number","target","value","onCityChange","updateResult","setItem","stringify","updateSearch","_this2","defaultValue","placeholder","onChange","min","max","step","size","onClick","onSubmitSearch","SearchOutlined_default","fontSize","dispatch","Header","react_router_dom","isHomePage","containers_SearchBar","MainPage","src_components_Header","containers_GridImage","Image","match","params","library","add","faStroopwafel","App","MuiThemeProvider_default","react_router","exact","path","name","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","rootReducer","composeWithDevTools","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a85c54e8.chunk.js","sourcesContent":["const initialState = function() {\n  const storage = JSON.parse(localStorage.getItem('search'))\n  if(storage !== null) {\n    return {city: storage.city, limit: storage.limit }\n  }\n  else {\n    return {city: 'cuba', limit: 21}\n  }\n}\n\nconst search = (state = initialState(), action) => {\n  switch (action.type) {\n    case 'UPDATE_SEARCH':\n        return {\n            city: action.city,\n            limit: action.limit\n          }\n    default:\n      return state\n  }\n}\n\nexport default search;\n","const result = (state = [], action) => {\n    switch (action.type) {\n      case 'UPDATE_RESULT':\n        return action.result\n      default:\n        return state\n    }\n  }\n  \n  export default result;\n  ","import { combineReducers } from 'redux'\nimport search from './search'\nimport result from './result'\nexport default combineReducers({\n    search,\n    result\n})","import React, { Component } from \"react\"\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from \"@material-ui/core/GridList\"\nimport GridListTile from \"@material-ui/core/GridListTile\"\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\"\nimport IconButton from '@material-ui/core/IconButton'\nimport InfoIcon from '@material-ui/icons/Info'\nimport { Link } from \"react-router-dom\";\n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n});\n\nclass GridImage extends Component {\n  render() {\n    return (\n      <div className='grid-image-div'>\n        <GridList cellHeight={200} cols={3} className='grid-image-list' style={styles.gridListStyle}>\n          {this.props.result.map(tile => (\n            <GridListTile key={tile.id} cols={1}>\n              <img src={tile.url} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                subtitle={tile.tags.map((tag,idx) => (<span key={idx}> {'#' + tag}</span>))}\n                actionIcon={\n                  <IconButton component={Link} to={`/image/${tile.id}/${tile.server}/${tile.farm}/${tile.secret}/${tile.title}`}>\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    );\n\n\n    \n  }\n}\n\nGridImage.propTypes = {\n  result: PropTypes.array\n}\n\nexport default withStyles(styles)(GridImage);\n","import { connect } from 'react-redux'\nimport GridImage from '../components/GridImage'\n\nconst mapStateToProps = state => ({\n  result: state.result,\n})\n\nexport default connect(mapStateToProps, null)(GridImage)","import axios from 'axios'\n\nexport const fetchSearchImages = async function(city, limit) {\n    let url = `https://api.flickr.com/services/rest?safe_search=1&per_page=${limit}&format=json&nojsoncallback=1&api_key=c87626e6505304450a217c8a6a4e20cd&method=flickr.photos.search&tags=${city}&extras=tags`\n\n    const response = await axios.get(url);\n    if (response.status === 200) {\n      let images = response.data.photos.photo.map(img => {\n        return {\n          url: getUrl({\n            farm:img.farm, \n            server: img.server, \n            id: img.id, \n            secret: img.secret }),\n          title: img.title,\n          owner: img.owner,\n          tags: img.tags.split(' '),\n          id: img.id,\n          farm: img.farm,\n          secret: img.secret,\n          server:img.server\n        }\n      })\n      return images\n    } else {\n      return []\n    }\n}\n\nexport const getUrl =function(photo) {\n  const {\n    id,\n    farm,\n    secret,\n    server\n  } = photo;\n\n  return `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`;\n}","import React, { Component } from \"react\"\nimport SearchIcon from '@material-ui/icons/SearchOutlined'\nimport IconButton from '@material-ui/core/IconButton'\nimport PropTypes from 'prop-types'\nimport {fetchSearchImages} from '../actions/fetch'\nimport './SearchBar.css'\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = ({city: this.props.city, limit: this.props.limit, result: this.props.result })\n  }\n\n  async componentWillMount() {\n    if (this.state.result.length === 0) {\n      const images = await fetchSearchImages(this.state.city, this.state.limit);\n      this.props.updateResult(images)\n    }\n  }\n\n  onLimitChange = function(event) {\n    this.setState({ limit: Number(event.target.value), city: this.state.city})\n  }\n\n  onCityChange = function(event) {\n      this.setState({ limit: this.state.limit, city: event.target.value})\n  }\n\n  async onSubmitSearch() {\n    if(this.state.city !== '' && this.state.limit !== '') {\n      const images =  await fetchSearchImages(this.state.city, this.state.limit);\n      localStorage.setItem('search', JSON.stringify({city: this.state.city, limit: this.state.limit}));\n      this.props.updateSearch(this.state.city, this.state.limit)\n      this.props.updateResult(images)\n    }\n  }\n\n  render() {\n    return (\n        <div className='searchbar-div'>\n            <input className=\"country-input\" type=\"text\" defaultValue={this.props.city}  placeholder='City'onChange={event => this.onCityChange(event)} />\n            <input className=\"limit-input\" type=\"number\" defaultValue={this.props.limit} onChange={event => this.onLimitChange(event)} min='0' max='200' step='1'/>\n            <div>\n                <IconButton className=\"search-icon\" size=\"small\" onClick={event => this.onSubmitSearch(event)}>\n                    <SearchIcon fontSize=\"small\"/>\n                </IconButton>\n            </div>\n        </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  city: PropTypes.string,\n  limit: PropTypes.number,\n  result: PropTypes.array,\n  updateSearch: PropTypes.func.isRequired,\n  updateResult: PropTypes.func.isRequired\n}\nexport default SearchBar\n","import { connect } from 'react-redux'\nimport SearchBar from '../components/SearchBar'\nimport { updateSearch, updateResult } from '../actions'\n\nconst mapStateToProps = state => ({\n  city: state.search.city,\n  limit: state.search.limit,\n  result: state.result\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSearch: (city, limit) => dispatch(updateSearch(city, limit)),\n  updateResult: (result) => dispatch(updateResult(result))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar)","export const updateSearch = (text, number) => ({\n  type: 'UPDATE_SEARCH',\n  city: text,\n  limit: number\n})\n\nexport const updateResult = (res) => ({\n  type: 'UPDATE_RESULT',\n  result: res\n})\n","import React, { Component } from 'react'\nimport SearchBar from '../containers/SearchBar'\nimport PropTypes from \"prop-types\"\nimport './Header.css'\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n  render () {\n    return (\n      <div className=\"navbar\">\n        <div className=\"title-div\">\n          <Link to=\"/\"><b className=\"title\">FlickrCity</b></Link>\n        </div>\n        {this.props.isHomePage ? (<SearchBar />) : (null)}\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isHomePage: PropTypes.bool.isRequired\n};\n\nexport default Header;\n\n\n\n\n\n\n\n\n","import React, { Component } from \"react\"\nimport GridImage from \"../containers/GridImage\"\nimport Header from './Header'\n\nclass MainPage extends Component {\n  render() {\n    return (\n      <div>\n        <Header isHomePage={true}/>\n        <div>\n          <GridImage/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\"\nimport Header from \"./Header\"\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\"\nimport './Image.css'\nimport { getUrl } from '../actions/fetch'\n\nclass Image extends Component {\n  url = getUrl({\n    farm: this.props.match.params.farm,\n    server: this.props.match.params.server,\n    id: this.props.match.params.id,\n    secret: this.props.match.params.secret\n  })\n\n  render() {\n    return (\n      <div>\n        <Header isHomePage={true}/>\n        <div className='div-image'>\n            <img src={this.url} alt={this.props.match.params.title} className='image-div'/>\n            <GridListTileBar\n                title={this.props.match.params.title}\n                className='gridtilebar'\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import React from 'react'\nimport {HashRouter as Router, Route } from 'react-router-dom'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\nimport MainPage from './MainPage'\nimport Image from './Image'\n\nlibrary.add(faStroopwafel)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route name=\"image\" path=\"/image/:id/:server/:farm/:secret/:title\" component={Image} />\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport App from './components/App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport './index.css'\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nregisterServiceWorker();"],"sourceRoot":""}