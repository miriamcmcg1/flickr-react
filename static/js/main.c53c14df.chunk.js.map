{"version":3,"sources":["reducers/search.js","reducers/result.js","reducers/index.js","components/GridImage.js","containers/GridImage.js","actions/fetch.js","components/SearchBar.js","containers/SearchBar.js","actions/index.js","components/Header.js","components/MainPage.js","components/Image.js","components/App.js","registerServiceWorker.js","index.js"],"names":["search","state","arguments","length","undefined","storage","JSON","parse","localStorage","getItem","city","limit","initialState","action","type","result","combineReducers","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","GridImage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","smallScreen","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","innerWidth","setState","innerHeight","react_default","a","createElement","className","GridList","cellHeight","cols","style","gridListStyle","map","tile","GridListTile","key","id","src","url","alt","title","GridListTileBar","subtitle","tags","tag","idx","actionIcon","IconButton","component","Link","to","concat","server","farm","secret","Info_default","Component","withStyles","connect","fetchSearchImages","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","images","wrap","_context","prev","next","axios","get","sent","status","data","photos","photo","img","getUrl","owner","split","abrupt","stop","_x","_x2","apply","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","cities","filter","lang","name","slice","getSuggestionValue","suggestion","renderSuggestion","SearchBar","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onLimitChange","event","Number","target","onCityChange","_ref2","newCity","_ref3","newValue","console","log","setItem","stringify","updateSearch","updateResult","e","_this2","inputProps","placeholder","onChange","onSubmit","onSubmitSearch","dist_default","defaultValue","min","max","step","size","onClick","SearchOutlined_default","fontSize","dispatch","Header","react_router_dom","isHomePage","containers_SearchBar","MainPage","src_components_Header","containers_GridImage","Image","match","params","library","add","faStroopwafel","App","MuiThemeProvider_default","react_router","exact","path","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","rootReducer","composeWithDevTools","render","es","components_App","document","getElementById","URL","process","origin","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c53c14df.chunk.js","sourcesContent":["const initialState = function() {\n  const storage = JSON.parse(localStorage.getItem(\"search\"));\n  if (storage !== null) {\n    return { city: storage.city, limit: storage.limit };\n  } else {\n    return { city: \"cuba\", limit: 21 };\n  }\n};\n\nconst search = (state = initialState(), action) => {\n  switch (action.type) {\n    case \"UPDATE_SEARCH\":\n      return {\n        city: action.city,\n        limit: action.limit\n      };\n    default:\n      return state;\n  }\n};\n\nexport default search;\n","const result = (state = [], action) => {\n  switch (action.type) {\n    case \"UPDATE_RESULT\":\n      return action.result;\n    default:\n      return state;\n  }\n};\n\nexport default result;\n","import { combineReducers } from \"redux\";\nimport search from \"./search\";\nimport result from \"./result\";\nexport default combineReducers({\n  search,\n  result\n});\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { Link } from \"react-router-dom\";\nimport \"./GridImage.css\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\"\n  }\n});\n\nclass GridImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0, smallScreen: false };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    let smallScreen = window.innerWidth <= 750;\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      smallScreen: smallScreen\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"grid-image-div\">\n        <GridList\n          cellHeight={200}\n          cols={this.state.smallScreen ? 2 : 3}\n          className={\"grid-image-lis\"}\n          style={styles.gridListStyle}\n        >\n          {this.props.result.map(tile => (\n            <GridListTile key={tile.id} cols={1}>\n              <img src={tile.url} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                subtitle={tile.tags.map((tag, idx) => (\n                  <span key={idx}> {\"#\" + tag}</span>\n                ))}\n                actionIcon={\n                  <IconButton\n                    component={Link}\n                    to={`/image/${tile.id}/${tile.server}/${tile.farm}/${\n                      tile.secret\n                    }/${tile.title}`}\n                  >\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    );\n  }\n}\n\nGridImage.propTypes = {\n  result: PropTypes.array\n};\n\nexport default withStyles(styles)(GridImage);\n","import { connect } from \"react-redux\";\nimport GridImage from \"../components/GridImage\";\n\nconst mapStateToProps = state => ({\n  result: state.result\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GridImage);\n","import axios from \"axios\";\n\nexport const fetchSearchImages = async function(city, limit) {\n  let url = `https://api.flickr.com/services/rest?safe_search=1&per_page=${limit}&format=json&nojsoncallback=1&api_key=c87626e6505304450a217c8a6a4e20cd&method=flickr.photos.search&tags=${city}&extras=tags`;\n\n  const response = await axios.get(url);\n  if (response.status === 200) {\n    let images = response.data.photos.photo.map(img => {\n      return {\n        url: getUrl({\n          farm: img.farm,\n          server: img.server,\n          id: img.id,\n          secret: img.secret\n        }),\n        title: img.title,\n        owner: img.owner,\n        tags: img.tags.split(\" \"),\n        id: img.id,\n        farm: img.farm,\n        secret: img.secret,\n        server: img.server\n      };\n    });\n    return images;\n  } else {\n    return [];\n  }\n};\n\nexport const getUrl = function(photo) {\n  const { id, farm, secret, server } = photo;\n\n  return `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`;\n};\n","import React, { Component } from \"react\";\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PropTypes from \"prop-types\";\nimport { fetchSearchImages } from \"../actions/fetch\";\nimport cities from \"cities.json\";\nimport Autosuggest from \"react-autosuggest\";\n\nimport \"./SearchBar.css\";\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0\n    ? []\n    : cities.filter(\n        lang => lang.name.toLowerCase().slice(0, inputLength) === inputValue\n      );\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: this.props.city,\n      limit: this.props.limit,\n      result: this.props.result,\n      suggestions: []\n    };\n    this.onLimitChange = this.onLimitChange.bind(this);\n    this.onCityChange = this.onCityChange.bind(this);\n  }\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  async handleSubmit(event) {\n    console.log(this.state)\n    if (this.state.city !== \"\" && this.state.limit !== \"\") {\n      const images = await fetchSearchImages(this.state.city, this.state.limit);\n      localStorage.setItem(\n        \"search\",\n        JSON.stringify({ city: this.state.city, limit: this.state.limit })\n      );\n      this.props.updateSearch(this.state.city, this.state.limit);\n      this.props.updateResult(images);\n    }\n  }\n\n  async componentWillMount() {\n    if (this.state.result.length === 0) {\n      const images = await fetchSearchImages(this.state.city, this.state.limit);\n      this.props.updateResult(images);\n    }\n  }\n\n  onLimitChange = function(event) {\n    this.setState({ limit: Number(event.target.value), city: this.state.city });\n  };\n\n  onCityChange = function(event, { newCity }) {\n    this.setState({ limit: this.state.limit, city: newCity });\n  };\n  onCityChange = (event, { newValue }) => {\n    this.setState({\n      city: newValue\n    });\n  };\n\n  async onSubmitSearch(e) {\n    if (this.state.city !== \"\" && this.state.limit !== \"\") {\n      const images = await fetchSearchImages(this.state.city, this.state.limit);\n      localStorage.setItem(\n        \"search\",\n        JSON.stringify({ city: this.state.city, limit: this.state.limit })\n      );\n      this.props.updateSearch(this.state.city, this.state.limit);\n      this.props.updateResult(images);\n    }\n  }\n\n  render() {\n    const inputProps = {\n      placeholder: \"Type a city\",\n      value: this.state.city,\n      onChange: this.onCityChange\n    };\n\n    return (\n      <form onSubmit={event => this.onSubmitSearch(event)}>\n        <div className=\"searchbar-div\">\n          <Autosuggest\n            className=\"city-input\"\n            suggestions={this.state.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n          />\n          <input\n            className=\"limit-input\"\n            type=\"number\"\n            defaultValue={this.props.limit}\n            onChange={event => this.onLimitChange(event)}\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n          />\n          <div>\n            <IconButton\n              className=\"search-icon\"\n              type=\"submit\"\n              value=\"Submit\"\n              size=\"small\"\n              onClick={event => this.onSubmitSearch(event)}\n            >\n              <SearchIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  city: PropTypes.string,\n  limit: PropTypes.number,\n  result: PropTypes.array,\n  updateSearch: PropTypes.func.isRequired,\n  updateResult: PropTypes.func.isRequired\n};\nexport default SearchBar;\n","import { connect } from \"react-redux\";\nimport SearchBar from \"../components/SearchBar\";\nimport { updateSearch, updateResult } from \"../actions\";\n\nconst mapStateToProps = state => ({\n  city: state.search.city,\n  limit: state.search.limit,\n  result: state.result\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSearch: (city, limit) => dispatch(updateSearch(city, limit)),\n  updateResult: result => dispatch(updateResult(result))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","export const updateSearch = (text, number) => ({\n  type: \"UPDATE_SEARCH\",\n  city: text,\n  limit: number\n});\n\nexport const updateResult = res => ({\n  type: \"UPDATE_RESULT\",\n  result: res\n});\n","import React, { Component } from \"react\";\nimport SearchBar from \"../containers/SearchBar\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"navbar\">\n        <div className=\"title-div\">\n          <Link to=\"/\">\n            <b className=\"title\">FlickrCity</b>\n          </Link>\n        </div>\n        {this.props.isHomePage ? <SearchBar /> : null}\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isHomePage: PropTypes.bool.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport GridImage from \"../containers/GridImage\";\nimport Header from \"./Header\";\n\nclass MainPage extends Component {\n  render() {\n    return (\n      <div>\n        <Header isHomePage={true} />\n        <div>\n          <GridImage />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport \"./Image.css\";\nimport { getUrl } from \"../actions/fetch\";\n\nclass Image extends Component {\n  url = getUrl({\n    farm: this.props.match.params.farm,\n    server: this.props.match.params.server,\n    id: this.props.match.params.id,\n    secret: this.props.match.params.secret\n  });\n\n  render() {\n    return (\n      <div>\n        <Header isHomePage={false} />\n        <div className=\"div-image\">\n          <img\n            src={this.url}\n            alt={this.props.match.params.title}\n            className=\"image-div\"\n          />\n          <GridListTileBar\n            title={this.props.match.params.title}\n            className=\"gridtilebar\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faStroopwafel } from \"@fortawesome/free-solid-svg-icons\";\nimport MainPage from \"./MainPage\";\nimport Image from \"./Image\";\n\nlibrary.add(faStroopwafel);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route\n              name=\"image\"\n              path=\"/image/:id/:server/:farm/:secret/:title\"\n              component={Image}\n            />\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport App from \"./components/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport \"./index.css\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}